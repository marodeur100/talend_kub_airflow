---
apiVersion: v1
kind: Namespace
metadata:
  name: stream
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: zookeeper-deployment-1
  namespace: stream
spec:
  template:
    metadata:
      labels:
        app: zookeeper-1
    spec:
      containers:
      - name: zoo1
        image: debezium/zookeeper
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_ID
          value: "1"
        - name: ZOOKEEPER_SERVER_1
          value: zoo1
---
apiVersion: v1
kind: Service
metadata:
  name: zoo1
  namespace: stream
  labels:
    app: zookeeper-1
spec:
  ports:
  - name: client
    port: 2181
    protocol: TCP
  - name: follower
    port: 2888
    protocol: TCP
  - name: leader
    port: 3888
    protocol: TCP
  selector:
    app: zookeeper-1
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: stream
  labels:
    name: kafka
spec:
  ports:
  - port: 9092
    name: kafka-port
    protocol: TCP
    nodePort: 30092
  selector:
    app: kafka
    id: "1"
  type: NodePort
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: kafka-broker1
  namespace: stream
spec:
  template:
    metadata:
      labels:
        selector: kafka
        app: kafka
        id: "1"
    spec:
      containers:
      - name: kafka
        image: debezium/kafka
        ports:
        - containerPort: 9092
        env:
        # - name: KAFKA_ADVERTISED_PORT
        #  value: "9092"
        # - name: KAFKA_ADVERTISED_HOST_NAME
        #  value: kafka-service
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1:2181
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_CREATE_TOPICS
          value: test:3:3
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: debezium-connect-source
  namespace: stream
spec:
  selector:
    matchLabels:
      app: debezium-connect-source
  replicas: 1
  template:
    metadata:
      labels:
        app: debezium-connect-source
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: debezium-connect-source
        image: debezium/connect
        env:
        - name: BOOTSTRAP_SERVERS
          value: kafka-service:9092
        - name: GROUP_ID
          value: "1"
        - name: CONFIG_STORAGE_TOPIC
          value: debezium-connect-source_config
        - name: OFFSET_STORAGE_TOPIC
          value: debezium-connect-source_offset
        ports:
        - containerPort: 8083
          name: dm-c-source
---
kind: Service
apiVersion: v1
metadata:
  name: postgres-airflow
  namespace: stream
spec:
  type: ExternalName
  externalName: postgres-airflow.default.svc.cluster.local
  ports:
  - port: 5432
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: mongo
  name: mongo
  namespace: stream
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    name: mongo
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: mongo
  name: mongo-controller
  namespace: stream
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - name: mongo
          containerPort: 27017
          hostPort: 27017
        volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: debezium-connect-source
  namespace: stream
  labels:
    app: debezium-connect-source
    component: core
spec:
  type: NodePort
  ports:
    - port: 8083
      nodePort: 30083
  selector:
    app: debezium-connect-source


