---
apiVersion: v1
kind: Namespace
metadata:
  name: stream
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: zookeeper-deployment-1
  namespace: stream
spec:
  template:
    metadata:
      labels:
        app: zookeeper-1
    spec:
      containers:
      - name: zoo1
        image: debezium/zookeeper
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_ID
          value: "1"
        - name: ZOOKEEPER_SERVER_1
          value: zoo1
---
apiVersion: v1
kind: Service
metadata:
  name: zoo1
  namespace: stream
  labels:
    app: zookeeper-1
spec:
  ports:
  - name: client
    port: 2181
    nodePort: 30181
    protocol: TCP
  - name: follower
    port: 2888
    protocol: TCP
  - name: leader
    port: 3888
    protocol: TCP
  selector:
    app: zookeeper-1
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: stream
  labels:
    name: kafka
spec:
  ports:
  - port: 9092
    name: kafka-port
    protocol: TCP
    nodePort: 30092
  selector:
    app: kafka
    id: "1"
  type: NodePort
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: kafka-broker1
  namespace: stream
spec:
  template:
    metadata:
      labels:
        selector: kafka
        app: kafka
        id: "1"
    spec:
      containers:
      - name: kafka
        image: debezium/kafka
        ports:
        - containerPort: 9092
          hostPort: 9092
        env:
        - name: MY_POD_NAMESPACE
          value: "stream"
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: kafka-broker1.$(MY_POD_NAMESPACE)
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1.$(MY_POD_NAMESPACE):2181
        - name: KAFKA_BROKER_ID
          value: "1"
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: debezium-connect-source
  namespace: stream
spec:
  selector:
    matchLabels:
      app: debezium-connect-source
  replicas: 1
  template:
    metadata:
      labels:
        app: debezium-connect-source
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: debezium-connect-source
        # image: confluentinc/cp-kafka-connect:3.2.4
        image: confluentinc/cp-kafka-connect
        env:
        - name: MY_POD_NAMESPACE
          value: "stream"
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: kafka-service:9092
        - name: CONNECT_GROUP_ID
          value: "1"
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: debezium-connect-source_config
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: debezium-connect-source_offset
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: debezium-connect-status
        - name: CONNECT_ZOOKEEPER_CONNECT
          value: "zoo1.$(MY_POD_NAMESPACE):2181"
        - name: CONNECT_KEY_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_VALUE_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          value: "localhost"
        - name: CONNECT_REST_PORT
          value: "8083"
        - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_OFFSET_FLUSH_INTERVAL_MS
          value: "10000"
        - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_PLUGIN_PATH
          value: "/usr/share/java"
        ports: 
        - containerPort: 8083
          name: dm-c-connect
        volumeMounts:
        - name: postgres-connector
          mountPath: /usr/share/java/debezium-connector-postgres/
      volumes:
      - name: postgres-connector
        hostPath:
          path: /home/osboxes/talend_kub_airflow/stream-example/debezium-connector-postgres
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
  namespace: stream
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
            privileged: true
      containers:
       - image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
         name: elasticsearch
         env:
         - name: discovery.type
           value: single-node
         - name: NAMESPACE
           value: stream
         - name: NODE_NAME
           value: elasticsearch
         - name: CLUSTER_NAME
           value: myesdb
         - name: NUMBER_OF_MASTERS
           value: "2"
         - name: NODE_MASTER
           value: "true"
         - name: NODE_INGEST
           value: "false"
         - name: NODE_DATA
           value: "false"
         - name: HTTP_ENABLE
           value: "true"
         - name: ES_JAVA_OPTS
           value: -Xms256m -Xmx256m
         - name: PROCESSORS
           value: "1"       
         ports:
           - containerPort: 9200
             name: http
           - name: transport
             containerPort: 9300
         livenessProbe:
            httpGet:
              path: /_cluster/health
              port: http
            initialDelaySeconds: 20
            timeoutSeconds: 5
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
  namespace: stream
spec:
  type: NodePort
  ports:
    - port: 9200
      name: http
      nodePort: 30192
  selector:
    app: elasticsearch
---
kind: Service
apiVersion: v1
metadata:
  name: postgres-airflow
  namespace: stream
spec:
  type: ExternalName
  externalName: postgres-airflow.default.svc.cluster.local
  ports:
  - port: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: debezium-connect-source
  namespace: stream
  labels:
    app: debezium-connect-source
spec:
  type: NodePort
  ports:
    - port: 8083
      name: dm-c-connect
      nodePort: 30083
  selector:
    app: debezium-connect-source


